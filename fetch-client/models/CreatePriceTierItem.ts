/* tslint:disable */
/* eslint-disable */
/**
 * Tangocrypto API
 * ## Overview  Tangocrypto API(Application Programing Interface) allows you fast and reliable access to the Cardano network that requires only minutes to integrate.    ## API Key header   When you sign up on https://www.tangocrypto.com and create an App an `x-api-key` is created. You must include the HTTP header `x-api-key` in every request in order to authenticate the API calls.   ## Network and Account ID   You can choose the mainnet or the testnet for your queries. The API requires a valid `app_id` to be included with your request traffic. This identifier should be appended to the request URL.   <table>    <tr><td><b>Network</b></td><td><b>Endpoint</b></td></tr>    <tr><td>Cardano mainnet</td><td><tt>https://cardano-mainnet.tangocrypto.com/{app_id}/v1</td></tt></tr>    <tr><td>Cardano testnet</td><td><tt>https://cardano-testnet.tangocrypto.com/{app_id}/v1</tt></td></tr>  </table>   ## Errors   ### HTTP Status codes   These are the response codes you are going to get when you query Tangocrypto API.   <table>    <tr><td><b>Code</b></td><td><b>Meaning</b></td></tr>    <tr><td><tt><strong>400</strong></tt></td><td><strong>Bad Request</strong> - Your request is invalid. </td></tr>    <tr><td><tt><strong>401</strong></tt></td><td><strong>Unauthorized</strong> - You must authenticate your request with an API key. Check out how to create a key if you do not have one. </td></tr>    <tr><td><tt><strong>403</strong></tt></td><td><strong>Forbidden</strong> - Check you are using the right API KEY, or you\'ve hit your capacity limit, or your request was rejected by your app\'s whitelist settings. </td></tr>    <tr><td><tt><strong>404</strong></tt></td><td><strong>Not found</strong> - Endpoint not found. </td></tr>    <tr><td><tt><strong>429</strong></tt></td><td><strong>Too Many Requests</strong> - You\'ve exceeded your concurrent requests capacity. Check out the Rate Limits page for solutions.</td></tr>    <tr><td><tt><strong>500</strong></tt></td><td><strong>Internal Server Error</strong> - We\'re unable to process your request right now. Get in touch with us if you see this.</td></tr>  </table>  
 *
 * The version of the OpenAPI document: 1
 * Contact: contact@tangocrypto.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreatePriceTierItem
 */
export interface CreatePriceTierItem {
    /**
     * Price tier ID.
     * @type {string}
     * @memberof CreatePriceTierItem
     */
    id?: string;
    /**
     * Price tier name
     * @type {string}
     * @memberof CreatePriceTierItem
     */
    name?: string;
    /**
     * Price (in Lovelaces) for the tier. For example, you can create a price tier with amount 5 and price 50. That means the buyer is going to pay 50 ADA for 5 NFTs.
     * @type {number}
     * @memberof CreatePriceTierItem
     */
    price?: number;
    /**
     * Amount of tokens to mint in a price tier. For example, you can specify that buyers selecting the bronze price tier will mint 1 token and the buyers choosing the silver price tier will mint 5 tokens.
     * @type {number}
     * @memberof CreatePriceTierItem
     */
    count?: number;
    /**
     * Token supply. If you don''t specify the supply, it will be set to 1 by default.
     * @type {number}
     * @memberof CreatePriceTierItem
     */
    supply?: number;
    /**
     * Amount of tokens sold with the price tier.
     * @type {number}
     * @memberof CreatePriceTierItem
     */
    tokenSoldCount?: number;
    /**
     * Payment URL. This is the URL you add to your website as a link or a button to buy the NFTs. You can think about this URL as your payment button.
     * @type {string}
     * @memberof CreatePriceTierItem
     */
    paymentLink?: string;
}

/**
 * Check if a given object implements the CreatePriceTierItem interface.
 */
export function instanceOfCreatePriceTierItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreatePriceTierItemFromJSON(json: any): CreatePriceTierItem {
    return CreatePriceTierItemFromJSONTyped(json, false);
}

export function CreatePriceTierItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePriceTierItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'count': !exists(json, 'count') ? undefined : json['count'],
        'supply': !exists(json, 'supply') ? undefined : json['supply'],
        'tokenSoldCount': !exists(json, 'token_sold_count') ? undefined : json['token_sold_count'],
        'paymentLink': !exists(json, 'payment_link') ? undefined : json['payment_link'],
    };
}

export function CreatePriceTierItemToJSON(value?: CreatePriceTierItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'price': value.price,
        'count': value.count,
        'supply': value.supply,
        'token_sold_count': value.tokenSoldCount,
        'payment_link': value.paymentLink,
    };
}

