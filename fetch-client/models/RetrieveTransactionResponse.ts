/* tslint:disable */
/* eslint-disable */
/**
 * Tangocrypto API
 * ## Overview  Tangocrypto API(Application Programing Interface) allows you fast and reliable access to the Cardano network that requires only minutes to integrate.    ## API Key header   When you sign up on https://www.tangocrypto.com and create an App an `x-api-key` is created. You must include the HTTP header `x-api-key` in every request in order to authenticate the API calls.   ## Network and Account ID   You can choose the mainnet or the testnet for your queries. The API requires a valid `app_id` to be included with your request traffic. This identifier should be appended to the request URL.   <table>    <tr><td><b>Network</b></td><td><b>Endpoint</b></td></tr>    <tr><td>Cardano mainnet</td><td><tt>https://cardano-mainnet.tangocrypto.com/{app_id}/v1</td></tt></tr>    <tr><td>Cardano testnet</td><td><tt>https://cardano-testnet.tangocrypto.com/{app_id}/v1</tt></td></tr>  </table>   ## Errors   ### HTTP Status codes   These are the response codes you are going to get when you query Tangocrypto API.   <table>    <tr><td><b>Code</b></td><td><b>Meaning</b></td></tr>    <tr><td><tt><strong>400</strong></tt></td><td><strong>Bad Request</strong> - Your request is invalid. </td></tr>    <tr><td><tt><strong>401</strong></tt></td><td><strong>Unauthorized</strong> - You must authenticate your request with an API key. Check out how to create a key if you do not have one. </td></tr>    <tr><td><tt><strong>403</strong></tt></td><td><strong>Forbidden</strong> - Check you are using the right API KEY, or you\'ve hit your capacity limit, or your request was rejected by your app\'s whitelist settings. </td></tr>    <tr><td><tt><strong>404</strong></tt></td><td><strong>Not found</strong> - Endpoint not found. </td></tr>    <tr><td><tt><strong>429</strong></tt></td><td><strong>Too Many Requests</strong> - You\'ve exceeded your concurrent requests capacity. Check out the Rate Limits page for solutions.</td></tr>    <tr><td><tt><strong>500</strong></tt></td><td><strong>Internal Server Error</strong> - We\'re unable to process your request right now. Get in touch with us if you see this.</td></tr>  </table>  
 *
 * The version of the OpenAPI document: 1
 * Contact: contact@tangocrypto.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RetrieveTransactionResponseAssetsInner } from './RetrieveTransactionResponseAssetsInner';
import {
    RetrieveTransactionResponseAssetsInnerFromJSON,
    RetrieveTransactionResponseAssetsInnerFromJSONTyped,
    RetrieveTransactionResponseAssetsInnerToJSON,
} from './RetrieveTransactionResponseAssetsInner';
import type { RetrieveTransactionResponseBlock } from './RetrieveTransactionResponseBlock';
import {
    RetrieveTransactionResponseBlockFromJSON,
    RetrieveTransactionResponseBlockFromJSONTyped,
    RetrieveTransactionResponseBlockToJSON,
} from './RetrieveTransactionResponseBlock';

/**
 * 
 * @export
 * @interface RetrieveTransactionResponse
 */
export interface RetrieveTransactionResponse {
    /**
     * Transaction hash
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    hash?: string;
    /**
     * Transaction index within the block
     * @type {number}
     * @memberof RetrieveTransactionResponse
     */
    blockIndex?: number;
    /**
     * The sum of all the UTXO per asset
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    outSum?: string;
    /**
     * Transaction fee in Lovelace
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    fee?: string;
    /**
     * Deposit within the transaction in Lovelace
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    deposit?: string;
    /**
     * Size of the transaction in bytes
     * @type {number}
     * @memberof RetrieveTransactionResponse
     */
    size?: number;
    /**
     * Specify a lower bound for a transaction to be valid. The transaction is valid from this slot number (including it) and thereafter.
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    invalidBefore?: string | null;
    /**
     * Specify an upper bound for a transaction to be valid. The transaction is valid up to this slot number (not including it).
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    invalidHereafter?: string | null;
    /**
     * Count of UTXOs within the transaction
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    utxoCount?: string;
    /**
     * Count of the withdrawals within the transaction
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    withdrawalCount?: string;
    /**
     * Count of the delegations within the transaction
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    delegationCount?: string;
    /**
     * Count of the stake keys (de)registration and delegation certificates within the transaction
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    stakeCertCount?: string;
    /**
     * True if the transaction was made to update a pool
     * @type {boolean}
     * @memberof RetrieveTransactionResponse
     */
    poolUpdate?: boolean;
    /**
     * True if the transaction was made to retire a pool
     * @type {boolean}
     * @memberof RetrieveTransactionResponse
     */
    poolRetire?: boolean;
    /**
     * Numnber of minted of burned tokens in the transaction
     * @type {string}
     * @memberof RetrieveTransactionResponse
     */
    assetMintOrBurnCount?: string;
    /**
     * 
     * @type {RetrieveTransactionResponseBlock}
     * @memberof RetrieveTransactionResponse
     */
    block?: RetrieveTransactionResponseBlock;
    /**
     * 
     * @type {Array<RetrieveTransactionResponseAssetsInner>}
     * @memberof RetrieveTransactionResponse
     */
    assets?: Array<RetrieveTransactionResponseAssetsInner>;
}

/**
 * Check if a given object implements the RetrieveTransactionResponse interface.
 */
export function instanceOfRetrieveTransactionResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RetrieveTransactionResponseFromJSON(json: any): RetrieveTransactionResponse {
    return RetrieveTransactionResponseFromJSONTyped(json, false);
}

export function RetrieveTransactionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RetrieveTransactionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hash': !exists(json, 'hash') ? undefined : json['hash'],
        'blockIndex': !exists(json, 'block_index') ? undefined : json['block_index'],
        'outSum': !exists(json, 'out_sum') ? undefined : json['out_sum'],
        'fee': !exists(json, 'fee') ? undefined : json['fee'],
        'deposit': !exists(json, 'deposit') ? undefined : json['deposit'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'invalidBefore': !exists(json, 'invalid_before') ? undefined : json['invalid_before'],
        'invalidHereafter': !exists(json, 'invalid_hereafter') ? undefined : json['invalid_hereafter'],
        'utxoCount': !exists(json, 'utxo_count') ? undefined : json['utxo_count'],
        'withdrawalCount': !exists(json, 'withdrawal_count') ? undefined : json['withdrawal_count'],
        'delegationCount': !exists(json, 'delegation_count') ? undefined : json['delegation_count'],
        'stakeCertCount': !exists(json, 'stake_cert_count') ? undefined : json['stake_cert_count'],
        'poolUpdate': !exists(json, 'pool_update') ? undefined : json['pool_update'],
        'poolRetire': !exists(json, 'pool_retire') ? undefined : json['pool_retire'],
        'assetMintOrBurnCount': !exists(json, 'asset_mint_or_burn_count') ? undefined : json['asset_mint_or_burn_count'],
        'block': !exists(json, 'block') ? undefined : RetrieveTransactionResponseBlockFromJSON(json['block']),
        'assets': !exists(json, 'assets') ? undefined : ((json['assets'] as Array<any>).map(RetrieveTransactionResponseAssetsInnerFromJSON)),
    };
}

export function RetrieveTransactionResponseToJSON(value?: RetrieveTransactionResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hash': value.hash,
        'block_index': value.blockIndex,
        'out_sum': value.outSum,
        'fee': value.fee,
        'deposit': value.deposit,
        'size': value.size,
        'invalid_before': value.invalidBefore,
        'invalid_hereafter': value.invalidHereafter,
        'utxo_count': value.utxoCount,
        'withdrawal_count': value.withdrawalCount,
        'delegation_count': value.delegationCount,
        'stake_cert_count': value.stakeCertCount,
        'pool_update': value.poolUpdate,
        'pool_retire': value.poolRetire,
        'asset_mint_or_burn_count': value.assetMintOrBurnCount,
        'block': RetrieveTransactionResponseBlockToJSON(value.block),
        'assets': value.assets === undefined ? undefined : ((value.assets as Array<any>).map(RetrieveTransactionResponseAssetsInnerToJSON)),
    };
}

