/* tslint:disable */
/* eslint-disable */
/**
 * Tangocrypto API
 * ## Overview  Tangocrypto API(Application Programing Interface) allows you fast and reliable access to the Cardano network that requires only minutes to integrate.    ## API Key header   When you sign up on https://www.tangocrypto.com and create an App an `x-api-key` is created. You must include the HTTP header `x-api-key` in every request in order to authenticate the API calls.   ## Network and Account ID   You can choose the mainnet or the testnet for your queries. The API requires a valid `app_id` to be included with your request traffic. This identifier should be appended to the request URL.   <table>    <tr><td><b>Network</b></td><td><b>Endpoint</b></td></tr>    <tr><td>Cardano mainnet</td><td><tt>https://cardano-mainnet.tangocrypto.com/{app_id}/v1</td></tt></tr>    <tr><td>Cardano testnet</td><td><tt>https://cardano-testnet.tangocrypto.com/{app_id}/v1</tt></td></tr>  </table>   ## Errors   ### HTTP Status codes   These are the response codes you are going to get when you query Tangocrypto API.   <table>    <tr><td><b>Code</b></td><td><b>Meaning</b></td></tr>    <tr><td><tt><strong>400</strong></tt></td><td><strong>Bad Request</strong> - Your request is invalid. </td></tr>    <tr><td><tt><strong>401</strong></tt></td><td><strong>Unauthorized</strong> - You must authenticate your request with an API key. Check out how to create a key if you do not have one. </td></tr>    <tr><td><tt><strong>403</strong></tt></td><td><strong>Forbidden</strong> - Check you are using the right API KEY, or you\'ve hit your capacity limit, or your request was rejected by your app\'s whitelist settings. </td></tr>    <tr><td><tt><strong>404</strong></tt></td><td><strong>Not found</strong> - Endpoint not found. </td></tr>    <tr><td><tt><strong>429</strong></tt></td><td><strong>Too Many Requests</strong> - You\'ve exceeded your concurrent requests capacity. Check out the Rate Limits page for solutions.</td></tr>    <tr><td><tt><strong>500</strong></tt></td><td><strong>Internal Server Error</strong> - We\'re unable to process your request right now. Get in touch with us if you see this.</td></tr>  </table>  
 *
 * The version of the OpenAPI document: 1
 * Contact: contact@tangocrypto.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NftTokenPolicy } from './NftTokenPolicy';
import {
    NftTokenPolicyFromJSON,
    NftTokenPolicyFromJSONTyped,
    NftTokenPolicyToJSON,
} from './NftTokenPolicy';

/**
 * 
 * @export
 * @interface NftToken
 */
export interface NftToken {
    /**
     * NFT id. This id is within your Tangocrypto account.
     * @type {string}
     * @memberof NftToken
     */
    id?: string;
    /**
     * asset name
     * @type {string}
     * @memberof NftToken
     */
    assetName?: string;
    /**
     * name
     * @type {string}
     * @memberof NftToken
     */
    name?: string;
    /**
     * The CIP14 fingerprint for the Multi-Asset.
     * @type {string}
     * @memberof NftToken
     */
    fingerprint?: string;
    /**
     * There are several states for the tokens `UPLOADING_CONTENT`, `FOR_SALE`, `RESERVED`, `CANCELED`, `COMPLETED`, `EXPIRED`
     * @type {string}
     * @memberof NftToken
     */
    status?: string;
    /**
     * Individual token price in Lovelace (1 ADA = 1000000 Lovelace). This field is available when the token is created with the `price`.
     * @type {number}
     * @memberof NftToken
     */
    price?: number;
    /**
     * Payment URL. This is the URL you add to your website as a link or a button to buy the NFTs. You can think about this URL as your payment button. This field is available when the token is created with the `price`.
     * @type {string}
     * @memberof NftToken
     */
    paymentLink?: string;
    /**
     * Token description.
     * @type {string}
     * @memberof NftToken
     */
    description?: string;
    /**
     * Link to IPFS image, for example, "ipfs://QmZHWcx7afrxuvcqeqntZtfv93c2VciBWjyi9LCwUEKZmx"
     * @type {string}
     * @memberof NftToken
     */
    image?: string;
    /**
     * the description
     * @type {string}
     * @memberof NftToken
     */
    mediaType?: string;
    /**
     * Metadata attributes tag definition. The tag values are matched with the collection tags
     * @type {object}
     * @memberof NftToken
     */
    metadataAttributes?: object;
    /**
     * Any arbitrary attributes that you didn't include in the collection attributes placeholder definition. Use key-value pairs to define unique attributes for each NFT.
     * @type {object}
     * @memberof NftToken
     */
    customAttributes?: object;
    /**
     * 
     * @type {NftTokenPolicy}
     * @memberof NftToken
     */
    policy?: NftTokenPolicy;
    /**
     * NFT Metadata. Here you can see exactly how the metadata will look like once the NFT is minted.
     * @type {object}
     * @memberof NftToken
     */
    metadata?: object;
    /**
     * Creation datetime in ISO 8601 format.
     * @type {string}
     * @memberof NftToken
     */
    createdAt?: string;
    /**
     * Update datetime in ISO 8601 format.
     * @type {number}
     * @memberof NftToken
     */
    updatedAt?: number;
}

/**
 * Check if a given object implements the NftToken interface.
 */
export function instanceOfNftToken(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NftTokenFromJSON(json: any): NftToken {
    return NftTokenFromJSONTyped(json, false);
}

export function NftTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): NftToken {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'assetName': !exists(json, 'asset_name') ? undefined : json['asset_name'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'fingerprint': !exists(json, 'fingerprint') ? undefined : json['fingerprint'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'paymentLink': !exists(json, 'payment_link') ? undefined : json['payment_link'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'mediaType': !exists(json, 'media_type') ? undefined : json['media_type'],
        'metadataAttributes': !exists(json, 'metadata_attributes') ? undefined : json['metadata_attributes'],
        'customAttributes': !exists(json, 'custom_attributes') ? undefined : json['custom_attributes'],
        'policy': !exists(json, 'policy') ? undefined : NftTokenPolicyFromJSON(json['policy']),
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
    };
}

export function NftTokenToJSON(value?: NftToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'asset_name': value.assetName,
        'name': value.name,
        'fingerprint': value.fingerprint,
        'status': value.status,
        'price': value.price,
        'payment_link': value.paymentLink,
        'description': value.description,
        'image': value.image,
        'media_type': value.mediaType,
        'metadata_attributes': value.metadataAttributes,
        'custom_attributes': value.customAttributes,
        'policy': NftTokenPolicyToJSON(value.policy),
        'metadata': value.metadata,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
    };
}

